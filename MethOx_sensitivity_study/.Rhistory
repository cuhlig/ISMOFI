ylab=expression(paste(n(CH["4"])["total"]," (nmol)"))
)
lines(out2[,1], out2[,3], lty=2, col = "red")
lines(out3[,1], out3[,3], lty=6, col = "blue", lwd = 3)
lines(out3a[,1], out3a[,3], lty=4, col = "darkgreen")
abline(h = out1[1,3]-(3.59*3), col="magenta", lty=5) # sensitivity set as 3*absolute mean standard deviation of replicates
abline(h = out1[1,3]-(0.0202*3*out1[1,3]), col="darkgrey", lty=5) # sensitivity set as 3*relative mean standard deviation of replicates
#mtext(expression(paste(n(CH["4"])["total"])), side=2, cex = 1.2, line =2, las=0)
#mtext("time [days]", side = 1, line = 2, cex = 1.2)
text(44, -20, "b", font = 2)
dev.off()
####normalized
filename <- "for paper all"
pdf(file = paste(
filename,
#    file,
".pdf"),
width = 9,
height = 9
)
par(
mfrow = c(3, 3),
mar = c(2.5, 2.5, 0, 0),
oma = c(2, 2, 1, 1),
cex = 1.0
)
plot(
out1[,1], out1[,2]-out1[1,2],
type="l",
lty = 1,
lwd = 2,
#main=paste(filename),
xlim = c(0, 45),
ylim = c(0 , 10),
xlab="time (d)",
ylab="normalized.delta.CH4"
)
lines(out2[,1], out2[,2]-out2[1,2], lty=2, lwd=2)
lines(out3[,1], out3[,2]-out3[1,2], lty=3, lwd=2)
lines(out3a[,1], out3a[,2]-out3a[1,2], lty=4, lwd=2)
abline(h = -0.04*delta.ini.1, col="black", lty=5)
#abline(h = delta.ini + 1.6, col = "black", lty = 3)
plot(
out1[,1], out1[,3]-out1[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 45),
ylim = c(-20, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out2[,1], out2[,3]-out2[1,3], lty=2, lwd=2)
lines(out3[,1], out3[,3]-out3[1,3], lty=3, lwd=2)
lines(out3a[,1], out3a[,3]-out3a[1,3], lty=4, lwd=2)
abline(h = -0.05*c.CH4.ini.1, col="black", lty=5)
#plot empty plot to place legend
plot(x=c(0,5,10), y=c(0,5,10), xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
legend(0, 10, c(paste("sensitivity.delta =", 0.04), paste("sensitivity.c.CH4 =", 0.05)), col="black", lty = 5, bty="n", lwd = 1, cex=0.8)
legend(0, 7, c(paste("delta.ini =", delta.ini.1), paste("c.CH4.ini =", c.CH4.ini.1) ), col="black", lty = 1, bty="n", cex=0.8)
legend(0, 5, c(paste("k.ox.1 =", k.ox.ppm.1), paste("k.ox.2 =", k.ox.ppm.2), paste("k.ox.3 =", k.ox.ppm.3), paste("k.ox.4 =", k.ox.ppm.3a) ), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=0.8)
###################
plot(
out4[,1], out4[,2]-out4[1,2],
type="l",
lty = 1,
lwd = 2,
#main=paste(filename),
xlim = c(0, 10),
ylim = c(0 , 10),
xlab="time (d)",
ylab="normalized.delta.CH4"
)
lines(out5[,1], out5[,2]-out5[1,2], lty=2, lwd=2)
lines(out6[,1], out6[,2]-out6[1,2], lty=3, lwd=2)
lines(out7[,1], out7[,2]-out7[1,2], lty=4, lwd=2)
abline(h = -0.04*delta.ini.1, col="black", lty=5)
#plot empty plot to place legend
legend(0, 9, c(paste("k.ox =", k.ox.ppm.4), paste("delta.ini =", delta.ini.1) ), col="black", lty = 1, bty="n", cex=0.8)
legend(0, 7, c(paste("c.CH4.ini.4 =", c.CH4.ini.4, "nmol/L"), paste("c.CH4.ini.5 =", c.CH4.ini.5, "nmol/L"), paste("c.CH4.ini.6 =", c.CH4.ini.6, "nmol/L"), paste("c.CH4.ini.7 =", c.CH4.ini.7, "nmol/L") ), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=0.8)
#legend(0, 4, c(paste("sensitivity.delta =", 0.04), paste("sensitivity.c.CH4 =", 0.05)), col="black", lty = 5, bty="n", lwd = 1, cex=1)
#abline(h = delta.ini + 1.6, col = "black", lty = 3)
plot(
out4[,1], out4[,3]-out4[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 10),
ylim = c(-200, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out5[,1], out5[,3]-out5[1,3], lty=2, lwd=2)
lines(out6[,1], out6[,3]-out6[1,3], lty=3, lwd=2)
lines(out7[,1], out7[,3]-out7[1,3], lty=4, lwd=2)
abline(h = -0.05*c.CH4.ini.4, col="black", lty=1)
abline(h = -0.05*c.CH4.ini.5, col="black", lty=2)
abline(h = -0.05*c.CH4.ini.6, col="black", lty=3)
abline(h = -0.05*c.CH4.ini.7, col="black", lty=4)
abline(v = 1.7, col="black", lty=4)
plot(
out4[,1], out4[,3]-out4[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 10),
ylim = c(-3, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out5[,1], out5[,3]-out5[1,3], lty=2, lwd=2)
lines(out6[,1], out6[,3]-out6[1,3], lty=3, lwd=2)
lines(out7[,1], out7[,3]-out7[1,3], lty=4, lwd=2)
abline(h = -0.05*c.CH4.ini.4, col="black", lty=1)
abline(h = -0.05*c.CH4.ini.5, col="black", lty=2)
abline(h = -0.05*c.CH4.ini.6, col="black", lty=3)
abline(h = -0.05*c.CH4.ini.7, col="black", lty=4)
abline(v = 1.7, col="black", lty=4)
#plot empty plot to place legend
plot(x=c(0,5,10), y=c(0,5,10), xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
legend(0, 8, c(paste("delta.ini =", delta.ini.1), paste("k.ox =", k.ox.ppm.4) ), col="black", lty = 1, bty="n", cex=1)
legend(0, 6, c(paste("c.CH4.ini.4 =", c.CH4.ini.4, "nmol/L"), paste("c.CH4.ini.5 =", c.CH4.ini.5, "nmol/L"), paste("c.CH4.ini.6 =", c.CH4.ini.6, "nmol/L"), paste("c.CH4.ini.7 =", c.CH4.ini.7, "nmol/L") ), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=1)
legend(0, 2, c(paste("sensitivity.delta =", 0.04), paste("sensitivity.c.CH4 =", 0.05)), col="black", lty = 5, bty="n", lwd = 1, cex=1)
#########################
plot(
out8[,1], out8[,2]-out8[1,2],
type="l",
lty = 1,
lwd = 2,
#main=paste(filename),
xlim = c(0, 20),
ylim = c(0 , 10),
xlab="time (d)",
ylab="normalized.delta.CH4"
)
lines(out9[,1], out9[,2]-out9[1,2], lty=2, lwd=2)
lines(out10[,1], out10[,2]-out10[1,2], lty=3, lwd=2)
abline(h = -0.04*delta.ini.8, col="black", lty=1)
abline(h = -0.04*delta.ini.9, col="black", lty=2)
abline(h = -0.04*delta.ini.10, col="black", lty=3)
#abline(h = delta.ini + 1.6, col = "black", lty = 3)
plot(
out8[,1], out8[,3]-out8[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 20),
ylim = c(-20, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out9[,1], out9[,3]-out9[1,3], lty=2, lwd=2)
lines(out10[,1], out10[,3]-out10[1,3], lty=3, lwd=2)
abline(h = -0.05*c.CH4.ini.8, col="black", lty=5)
#plot empty plot to place legend
plot(x=c(0,5,10), y=c(0,5,10), xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
legend(0, 8, c(paste("k.ox =", k.ox.ppm.8), paste("c.CH4.ini =", c.CH4.ini.8) ), col="black", lty = 1, bty="n", cex=0.8)
legend(0, 6, c(paste("delta.ini =", delta.ini.8), paste("delta.ini =", delta.ini.9), paste("delta.ini =", delta.ini.10) ), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=0.8)
#legend(0, 2, c(paste("sensitivity.delta =", 0.04), paste("sensitivity.c.CH4 =", 0.05)), col="black", lty = 5, bty="n", lwd = 1, cex=1)
dev.off()
filename <- "for paper condensed"
pdf(file = paste(
filename,
#    file,
".pdf"),
width = 12,
height = 8
)
par(
mfrow = c(2, 3),
mar = c(2.5, 2.5, 0, 0),
oma = c(2, 2, 3, 1),
cex = 1.0
)
plot(
out1[,1], out1[,2]-out1[1,2],
type="l",
lty = 1,
lwd = 2,
#main=paste(filename),
xlim = c(0, 45),
ylim = c(0 , 10),
xlab="" ,
ylab=""
)
lines(out2[,1], out2[,2]-out2[1,2], lty=2, lwd=2)
lines(out3[,1], out3[,2]-out3[1,2], lty=3, lwd=2)
lines(out3a[,1], out3a[,2]-out3a[1,2], lty=4, lwd=2)
abline(h = -0.025*delta.ini.1, col="black", lty=5)
legend(5, 10, c(paste("sensitivity.delta =", 0.025), paste("sensitivity.c.CH4 =", 0.06)), col="black", lty = 5, bty="n", lwd = 1, cex=0.8)
#legend(25, 6, c(paste("delta.ini =", delta.ini.1), paste("c.CH4.ini =", c.CH4.ini.1) ), col="black", lty = c(0, 0), bty="n", cex=0.8)
legend(30, 5, c(k.ox.ppm.1, k.ox.ppm.2, k.ox.ppm.3, k.ox.ppm.3a ), title = (expression(paste(k["ox"]))), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=0.8)
text(0, 10, "a", font = 2)
mtext(expression(paste(delta^13,C,(CH["4"])["normalized"])), side=2, cex = 1.2, line =2, las=0)
mtext(expression(paste(delta^13,C,(CH["4"])["ini"]," ", -35, "\u2030", ", ", c(CH["4"])["initial"], " ", 120,"nmol/L")), side=3, cex = 1.0, line =1, las=0)
plot(
out4[,1], out4[,2]-out4[1,2],
type="l",
lty = 1,
lwd = 2,
#main=paste(filename),
xlim = c(0, 10),
ylim = c(0 , 10),
xlab="time (d)",
ylab="normalized.delta.CH4"
)
lines(out5[,1], out5[,2]-out5[1,2], lty=2, lwd=2)
lines(out6[,1], out6[,2]-out6[1,2], lty=3, lwd=2)
lines(out7[,1], out7[,2]-out7[1,2], lty=4, lwd=2)
abline(h = -0.025*delta.ini.1, col="black", lty=5)
#plot empty plot to place legend
#legend(4, 8, c(paste("k.ox =", k.ox.ppm.4), paste("delta.ini =", delta.ini.1) ), col="black", lty = c(0,0), bty="n", cex=0.8)
legend(6, 10, c(paste(c.CH4.ini.4, "nmol/L"), paste(c.CH4.ini.5, "nmol/L"), paste(c.CH4.ini.6, "nmol/L"), paste(c.CH4.ini.7, "nmol/L")),
title = (expression(paste(c(CH["4"])["initial"]))), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=0.8)
#legend(0, 4, c(paste("sensitivity.delta =", 0.04), paste("sensitivity.c.CH4 =", 0.05)), col="black", lty = 5, bty="n", lwd = 1, cex=1)
text(0, 10, "b", font = 2)
mtext(expression(paste(delta^13,C,(CH["4"])["ini"]," ", -35, "\u2030", ", ", k["ox"], " ", 0.01)), side=3, cex = 1.0, line =1, las=0)
plot(
out8[,1], out8[,2]-out8[1,2],
type="l",
lty = 1,
lwd = 2,
#main=paste(filename),
xlim = c(0, 20),
ylim = c(0 , 10),
xlab="time (d)",
ylab="normalized.delta.CH4"
)
lines(out9[,1], out9[,2]-out9[1,2], lty=2, lwd=2)
lines(out10[,1], out10[,2]-out10[1,2], lty=3, lwd=2)
abline(h = -0.025*delta.ini.8, col="black", lty=1)
abline(h = -0.025*delta.ini.9, col="black", lty=2)
abline(h = -0.025*delta.ini.10, col="black", lty=3)
#abline(h = delta.ini + 1.6, col = "black", lty = 3)
#plot empty plot to place legend
#legend(12, 8, c(paste("k.ox =", k.ox.ppm.8), paste("c.CH4.ini =", c.CH4.ini.8) ),  col="black", lty = c(0,0), bty="n", cex=0.8)
legend(13, 10, c(paste(delta.ini.8, "\u2030"), paste(delta.ini.9, "\u2030"), paste(delta.ini.10, "\u2030") ),
title = (expression(paste(delta^13,C,(CH["4"])["ini"]))), col="black", lty = c(1, 2, 3, 4), bty="n", lwd = 2, cex=0.8)
#legend(0, 2, c(paste("sensitivity.delta =", 0.04), paste("sensitivity.c.CH4 =", 0.05)), col="black", lty = 5, bty="n", lwd = 1, cex=1)
text(0, 10, "c", font = 2)
mtext(expression(paste(c(CH["4"])["initial"], " ", 120,"nmol/L", ", ", k["ox"], " ", 0.01)), side=3, cex = 1.0, line =1, las=0)
plot(
out1[,1], out1[,3]-out1[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 45),
ylim = c(-20, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out2[,1], out2[,3]-out2[1,3], lty=2, lwd=2)
lines(out3[,1], out3[,3]-out3[1,3], lty=3, lwd=2)
lines(out3a[,1], out3a[,3]-out3a[1,3], lty=4, lwd=2)
abline(h = -0.06*c.CH4.ini.1, col="black", lty=5)
mtext(expression(paste(n(CH["4"])["total, normalized"])), side=2, cex = 1.2, line =2, las=0)
mtext("time [days]", side = 1, line = 2, cex = 1.2)
text(44, -20, "d", font = 2)
plot(
out4[,1], out4[,3]-out4[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 10),
ylim = c(-20, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out5[,1], out5[,3]-out5[1,3], lty=2, lwd=2)
lines(out6[,1], out6[,3]-out6[1,3], lty=3, lwd=2)
lines(out7[,1], out7[,3]-out7[1,3], lty=4, lwd=2)
abline(h = -0.06*c.CH4.ini.4, col="black", lty=1)
abline(h = -0.06*c.CH4.ini.5, col="black", lty=2)
abline(h = -0.06*c.CH4.ini.6, col="black", lty=3)
abline(h = -0.06*c.CH4.ini.7, col="black", lty=4)
#abline(v = 1.7, col="black", lty=4)
mtext("time [days]", side = 1, line = 2, cex = 1.2)
text(10, -20, "e", font = 2)
plot(
out8[,1], out8[,3]-out8[1,3],
type="l",
lty = 1,
lwd = 2,
#main="k.ox = 0.01",
xlim = c(0, 20),
ylim = c(-20, 0),
xlab="time (d)",
ylab="normalized.n.CH4.total (nmol)"
)
lines(out9[,1], out9[,3]-out9[1,3], lty=2, lwd=2)
lines(out10[,1], out10[,3]-out10[1,3], lty=3, lwd=2)
abline(h = -0.06*c.CH4.ini.8, col="black", lty=5)
mtext("time [days]", side = 1, line = 2, cex = 1.2)
text(20, -20, "f", font = 2)
dev.off()
setwd("C:/Users/Christiane/Desktop/submission/github/MethOx_sensitivity_study")
#------------------
# author: Christiane Uhlig, Graduate School of Oceanography, URI
# Version: 1.0 April 2017
# Email: cuhlig@uri.edu
#------------------
#------------------
# Uhlig, C., Loose, B., Using stable isotopes and gas concentrations for independent constraints on microbial methane oxidation at Arctic Ocean temperatures,
# Limnology & Oceanography Methods (under review)
#------------------
###sensitivity study to estimate detection limit of ISMOFI method
#empty workspace
rm(list=ls())
#set work directory to source file location
#R menue: Session -> Set Working Directory -> To Source File Location
library(plyr)
#parameters
T <- 0  # °C
S <- 34.8 # salinity in PSU
V.hs <- 0.1 #L
V.w <- 0.75 #L
#calculate ideal gas constant (IGC)
source("../R_lib/IGC.R")
IGC <- idealgasconstant(T)
source("../R_lib/BunsenCoeff.R")
bunsen.coeff <- bunsen(T, S)
bunsen.coeff.L.L <- bunsen.coeff[1,1]
bunsen.coeff.mol.L <- bunsen.coeff[1,2]
source("../R_lib/BunsenCoeff.R")
bunsen.coeff <- bunsen(T, S)
bunsen.coeff.L.L <- bunsen.coeff[1,1]
bunsen.coeff.mol.L <- bunsen.coeff[1,2]
source("../IGC.R")
IGC <- idealgasconstant(temp)
setwd("C:/Users/Christiane/Desktop/submission/github/MethOx_sensitivity_study")
#empty workspace
rm(list=ls())
#set work directory to source file location
#R menue: Session -> Set Working Directory -> To Source File Location
library(plyr)
#parameters
T <- 0  # °C
S <- 34.8 # salinity in PSU
V.hs <- 0.1 #L
V.w <- 0.75 #L
#calculate ideal gas constant (IGC)
source("../R_lib/IGC.R")
IGC <- idealgasconstant(T)
source("../R_lib/BunsenCoeff.R")
bunsen.coeff <- bunsen(T, S)
bunsen.coeff.L.L <- bunsen.coeff[1,1]
bunsen.coeff.mol.L <- bunsen.coeff[1,2]
#change of isotope ratio and concentration
delta.CH4.dt <- function (t, delta.CH4.ini, c.CH4.ini, k.ox.ppm, k.ox.delta) {
n.CH4.total.ini <- (c.CH4.ini/(bunsen.coeff.mol.L*10^9))*(V.w*bunsen.coeff.mol.L+V.hs*IGC)*10^9 # in nmol
delta.CH4.t <- (exp(-k.ox.delta*t*(1/alpha.S.P-1)))*(delta.CH4.ini+1000)-1000
n.CH4.total.t <- exp(-k.ox.ppm*t)*n.CH4.total.ini
list(c(t, delta.CH4.t, n.CH4.total.t))
}
#constant concentration
#constant istotope ratio
#different k
delta.ini.1 = -35
c.CH4.ini.1 = 120
k.ox.ppm.1 = 0.1
k.ox.delta.1 = 0.1
k.ox.ppm.2 = 0.01
k.ox.delta.2 = 0.01
k.ox.ppm.3 = 0.001
k.ox.delta.3 = 0.001
k.ox.ppm.3a = 0.0001
k.ox.delta.3a = 0.0001
#different concentration
#constant istotope ratio
#constant k
delta.ini.4 = -35
c.CH4.ini.4 = 3000
c.CH4.ini.5 = 300
c.CH4.ini.6 = 30
c.CH4.ini.7 = 3
k.ox.ppm.4 = 0.01
k.ox.delta.4 = 0.01
#constant concentration
#different istotope ratio
#constant k
c.CH4.ini.8 = 120
delta.ini.8 = -23
delta.ini.9 = -35
delta.ini.10 = -70
k.ox.ppm.8 = 0.01
k.ox.delta.8 = 0.01
alpha.S.P <- 1.025
t <- as.data.frame(seq(0, 45, 1))
out1 <- as.data.frame(delta.CH4.dt(t, delta.ini.1, c.CH4.ini.1, k.ox.ppm.1, k.ox.delta.1))
out1 <- rename(out1, c("seq.0..45..1."="t", "seq.0..45..1..1"="delta", "seq.0..45..1..2"="n.CH4.delta"))
out2 <- as.data.frame(delta.CH4.dt(t, delta.ini.1, c.CH4.ini.1, k.ox.ppm.2, k.ox.delta.2))
out2 <- rename(out2, c("seq.0..45..1."="t", "seq.0..45..1..1"="delta", "seq.0..45..1..2"="n.CH4.delta"))
out3 <- as.data.frame(delta.CH4.dt(t, delta.ini.1, c.CH4.ini.1, k.ox.ppm.3, k.ox.delta.3))
out3 <- rename(out3, c("seq.0..45..1."="t", "seq.0..45..1..1"="delta", "seq.0..45..1..2"="n.CH4.delta"))
out3a <- as.data.frame(delta.CH4.dt(t, delta.ini.1, c.CH4.ini.1, k.ox.ppm.3a, k.ox.delta.3a))
out3a <- rename(out3a, c("seq.0..45..1."="t", "seq.0..45..1..1"="delta", "seq.0..45..1..2"="n.CH4.delta"))
plot(
out1[,1], out1[,2],
type="l",
lty = 1,
#lwd = 2,
col = "black",
#main=paste(filename),
xlim = c(),
ylim = c(-35.5, -30),
xlab="time (days)" ,
ylab=expression(paste(delta^{13}, CH[4], " (\u2030)"))
)
lines(out2[,1], out2[,2], lty=2, col = "red")
lines(out3[,1], out3[,2], lty=6, col = "blue", lwd =3)
lines(out3a[,1], out3a[,2], lty=4, col = "darkgreen")
abline(h = delta.ini.1 - (-0.45*3), col="magenta", lty=5) # sensitivity set as 3*absolute mean standard deviation of replicates
abline(h = delta.ini.1-(0.0073*3*delta.ini.1), col="darkgrey", lty=5) # sensitivity set as 3*relative mean standard deviation of replicates
legend(20, -31,
c(k.ox.ppm.1, k.ox.ppm.2, k.ox.ppm.3, "0.0001" ),
title = (expression(paste(k["ox"]," ",(day^-1)))),
col=c("black", "red", "blue", "darkgreen"),
lty = c(1, 2, 5, 4),
bty="n",
cex=0.8)
text(0, 10, "a", font = 2)
plot(
out1[,1], out1[,3],
type="l",
lty = 1,
col = "black",
#main="k.ox = 0.01",
xlim = c(),
ylim = c(300, 360),
xlab="time (days)",
ylab=expression(paste(n(CH["4"])["total"]," (nmol)"))
)
lines(out2[,1], out2[,3], lty=2, col = "red")
lines(out3[,1], out3[,3], lty=6, col = "blue", lwd = 3)
lines(out3a[,1], out3a[,3], lty=4, col = "darkgreen")
abline(h = out1[1,3]-(3.59*3), col="magenta", lty=5) # sensitivity set as 3*absolute mean standard deviation of replicates
abline(h = out1[1,3]-(0.0202*3*out1[1,3]), col="darkgrey", lty=5) # sensitivity set as 3*relative mean standard deviation of replicates
text(44, -20, "b", font = 2)
filename <- "varying_k_only"
pdf(file = paste(
filename,
#    file,
".pdf"),
width = 6,
height = 3
)
# png(file = paste(
#   filename,
#   #    file,
#   ".png"),
#   width = 6,
#   height = 3,
#   units = "in",
#   res = 300
# )
par(
mfrow = c(1, 2),
mgp = c(2.2, 0.9, 0),
mar = c(4, 5, 0, 0),
oma = c(0, 0, 1, 1),
cex = 1.0,
lwd = 2.5
)
plot(
out1[,1], out1[,2],
type="l",
lty = 1,
#lwd = 2,
col = "black",
#main=paste(filename),
xlim = c(),
ylim = c(-35.5, -30),
xlab="time (days)" ,
ylab=expression(paste(delta^{13}, CH[4], " (\u2030)"))
)
lines(out2[,1], out2[,2], lty=2, col = "red")
lines(out3[,1], out3[,2], lty=6, col = "blue", lwd =3)
lines(out3a[,1], out3a[,2], lty=4, col = "darkgreen")
abline(h = delta.ini.1 - (-0.45*3), col="magenta", lty=5) # sensitivity set as 3*absolute mean standard deviation of replicates
abline(h = delta.ini.1-(0.0073*3*delta.ini.1), col="darkgrey", lty=5) # sensitivity set as 3*relative mean standard deviation of replicates
legend(20, -31,
c(k.ox.ppm.1, k.ox.ppm.2, k.ox.ppm.3, "0.0001" ),
title = (expression(paste(k["ox"]," ",(day^-1)))),
col=c("black", "red", "blue", "darkgreen"),
lty = c(1, 2, 5, 4),
bty="n",
cex=0.8)
text(0, 10, "a", font = 2)
plot(
out1[,1], out1[,3],
type="l",
lty = 1,
col = "black",
#main="k.ox = 0.01",
xlim = c(),
ylim = c(300, 360),
xlab="time (days)",
ylab=expression(paste(n(CH["4"])["total"]," (nmol)"))
)
lines(out2[,1], out2[,3], lty=2, col = "red")
lines(out3[,1], out3[,3], lty=6, col = "blue", lwd = 3)
lines(out3a[,1], out3a[,3], lty=4, col = "darkgreen")
abline(h = out1[1,3]-(3.59*3), col="magenta", lty=5) # sensitivity set as 3*absolute mean standard deviation of replicates
abline(h = out1[1,3]-(0.0202*3*out1[1,3]), col="darkgrey", lty=5) # sensitivity set as 3*relative mean standard deviation of replicates
text(44, -20, "b", font = 2)
dev.off()
